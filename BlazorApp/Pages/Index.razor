@page "/"
@using SadPumpkin.Games.ThirtyDayHero.BlazorApp.States
@using SadPumpkin.Util.StateMachine.Signals
@using SadPumpkin.Util.StateMachine.States

@namespace SadPumpkin.Games.ThirtyDayHero.BlazorApp.Pages

@inject IContext StateContainer;
@inject IStateMachine StateMachine;

@if (StateMachine.CurrentState is BlazorState blazorState)
{
    RenderFragment fragment = (renderBuilder) =>
    {
        renderBuilder.OpenComponent(0, blazorState.RenderType);
        renderBuilder.AddAttribute(1, "BlazorState", blazorState);
        renderBuilder.CloseComponent();
    };

    @fragment
}

@code 
{
    protected override void OnInitialized()
    {
        StateContainer?.Get<StateChanged>()?.Listen(OnStateChanged);
    }

    ~Index()
    {
        StateContainer?.Get<StateChanged>()?.Unlisten(OnStateChanged);
    }

    private void OnStateChanged(IState newState)
    {
        InvokeAsync(StateHasChanged);
    }
}