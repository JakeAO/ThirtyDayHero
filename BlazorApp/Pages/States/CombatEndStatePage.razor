@using SadPumpkin.Games.ThirtyDayHero.BlazorApp.States.Combat
@using SadPumpkin.Games.ThirtyDayHero.BlazorApp.States
@using SadPumpkin.Util.CombatEngine.Abilities
@using SadPumpkin.Util.CombatEngine.Actor
@using SadPumpkin.Util.CombatEngine.Item
@using SadPumpkin.Util.CombatEngine.StatMap

@inject IStateMachine StateMachine;

<div class="main-window">
    <div class="main-column">
        <div class="prompt-section">
            @if (BlazorState.Results.Success)
            {
                <h3 class="prompt-title">Victory</h3>
                <div class="prompt-content">
                    <h4>Results</h4>
                    <p><b>EXP: </b>@BlazorState.Results.ExpReward</p>
                    <p><img src="assets/gold.png" alt="Gold" style="max-height: 32px;max-width: 32px"/>: @BlazorState.Results.GoldReward</p>
                </div>
            }
            else
            {
                <h3 class="prompt-title">Defeated</h3>
                <div class="prompt-content">
                    <p>The heroes have died, all is lost.</p>
                    <p>Nothing stands between the kingdom and the oncoming Calamity.</p>
                </div>
            }
        </div>
        <div class="character-section">
            @if (BlazorState.Results.Success)
            {
                @foreach (PlayerCharacter character in BlazorState.Party.Characters)
                {
                    @if (BlazorState.OldStatMapsByCharacter.TryGetValue(character.Id, out IStatMap oldStatMap) &&
                         BlazorState.StatChangesByCharacter.TryGetValue(character.Id, out uint[] statChanges) &&
                         BlazorState.GainedAbilitiesByCharacter.TryGetValue(character.Id, out IAbility[] gainedAbilities))
                    {
                        <div style="float: left">
                            <RadzenCard>
                                <h3>@character.Name</h3>
                                <table style="text-align: center;padding: 2px;border: 1px solid grey">
                                    <tr>
                                        @foreach (StatType statType in StatTypesToShow(statChanges[(int) StatType.LVL] > 0))
                                        {
                                            <th>@statType.ToString()</th>
                                        }
                                    </tr>
                                    <tr>
                                        @foreach (StatType statType in StatTypesToShow(statChanges[(int) StatType.LVL] > 0))
                                        {
                                            <td>@oldStatMap[statType]</td>
                                        }
                                    </tr>
                                    <tr>
                                        @foreach (StatType statType in StatTypesToShow(statChanges[(int) StatType.LVL] > 0))
                                        {
                                            @if (statChanges[(int) statType] > 0)
                                            {
                                                <th style="color: forestgreen">+@statChanges[(int) statType]</th>
                                            }
                                            else
                                            {
                                                <td> </td>
                                            }
                                        }
                                    </tr>
                                    <tr>
                                        @foreach (StatType statType in StatTypesToShow(statChanges[(int) StatType.LVL] > 0))
                                        {
                                            <td>@character.Stats[statType]</td>
                                        }
                                    </tr>
                                </table>
                                @if (gainedAbilities.Length > 0)
                                {
                                    <h4>Gained Abilities</h4>
                                    <div style="display: flex;flex-direction: column;justify-content: center">
                                        @foreach (IAbility ability in gainedAbilities)
                                        {
                                            <p title="@ability.Desc">@ability.Name</p>
                                        }
                                    </div>
                                }
                            </RadzenCard>
                        </div>
                    }
                }
            }
        </div>
        <div class="response-section">
            <RadzenButton Text="Continue"
                          Click="@BlazorState.Continue"
                          Style="width: fit-content"/>
        </div>
    </div>
</div>

@code 
{
    [Parameter]
    public CombatEndState BlazorState { get; set; }

    private StatType[] StatTypesToShow(bool didLevelUp)
    {
        return didLevelUp ? _levelUpStatTypes : _noLevelStatTypes;
    }

    private readonly StatType[] _noLevelStatTypes =
    {
        StatType.LVL,
        StatType.EXP
    };
    private readonly StatType[] _levelUpStatTypes =
    {
        StatType.LVL,
        StatType.EXP,
        StatType.HP_Max,
        StatType.STA_Max,
        StatType.STR,
        StatType.DEX,
        StatType.CON,
        StatType.INT,
        StatType.MAG,
        StatType.CHA
    };
}