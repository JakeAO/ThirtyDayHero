@using SadPumpkin.Games.ThirtyDayHero.BlazorApp.States.Town
@using SadPumpkin.Games.ThirtyDayHero.BlazorApp.Shared.DialogViews
@using SadPumpkin.Util.CombatEngine.Actor

@inject DialogService DialogService

<div class="main-window">
    <div class="main-column">
        <div class="prompt-section">
            <h3 class="prompt-title">Town Square</h3>
            <div class="prompt-content">
                <p>@BlazorState.PromptMessageText</p>
            </div>
            <p class="prompt-footer">How do you spend your time?</p>
        </div>
        <div class="character-section">
            @foreach (PlayerCharacter playerCharacter in BlazorState.Party.Characters)
            {
                <div style="float: left">
                    <ActorQuickView Actor="@playerCharacter"/>
                </div>
            }
        </div>
        <div class="response-section">
            @foreach (IEventOption eventOption in BlazorState.EventOptions.OrderBy(x => x.Priority))
            {
                switch (eventOption)
                {
                    case SingleOption singleOption:
                    {
                        <RadzenButton Click="@singleOption.Select.Invoke"
                                      Text="@singleOption.Text"
                                      Title="@singleOption.Tooltip"
                                      Disabled="@singleOption.Disabled"/>
                        break;
                    }
                    case MultipleOption multipleOption:
                    {
                        <RadzenSplitButton Click="item => multipleOption.Select.Invoke(item?.Value ?? multipleOption.DefaultValue)"
                                           Text="@multipleOption.Text"
                                           Title="@multipleOption.Tooltip"
                                           Disabled="@multipleOption.Disabled">
                            <ChildContent>
                                @foreach (var itemTuple in multipleOption.AlternateOptions)
                                {
                                    <RadzenSplitButtonItem Text="@itemTuple.text"
                                                           Title="@itemTuple.tooltip"
                                                           Value="@itemTuple.value"/>
                                }
                            </ChildContent>
                        </RadzenSplitButton>
                        break;
                    }
                }
            }
        </div>
    </div>
    <div class="side-column">
        <div>
            <img src="assets/gold.png" alt="Gold" style="max-width: 32px;max-height: 32px"/> @BlazorState.Party.Gold
        </div>
        <RadzenButton
            Text="Inventory"
            Click="@OnInventoryPressed"/>
    </div>
</div>

@code {
    [Parameter]
    public TownHubState BlazorState { get; set; }

    private void OnInventoryPressed(MouseEventArgs args)
    {
        DialogService.Open<InventoryDialogView>(
            "Inventory",
            new Dictionary<string, object>()
            {
                {"Party", BlazorState.Party}
            },
            new DialogOptions()
            {
                ShowClose = true,
                ShowTitle = true,
                Width = "950px",
                Height = "600px"
            });
    }
}